# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
env/
# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
media/
!media/.gitkeep
staticfiles/

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a team project
#  this file should be committed.
.idea/

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Docker
## Dockerignore is the official file to ignore files in Docker
.dockerignore

## Docker
# Temporary files created by Docker
docker-compose.tmp-*
.docker-tmp

# Logs
logs
*.log

# Database
## SQLite (often used in development)
*.sqlite3
*.db

## PostgreSQL (common in production)
*.pid
*.postgresql

## MySQL
*.mysql

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node_modules
node_modules/

# npm
npm-debug.log*

# yarn
yarn-debug.log*
yarn-error.log*

# parcel-bundler
.cache
.parcel-cache

# next.js
.next/

# nuxt.js
.nuxt/

# vuepress
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# IDEs
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
[Tt]humbs.db

# Backup files
*.bak
*.backup
*.old
*.orig
*.temp

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Docker Compose
docker-compose.override.yml

# Docker build
.docker-build

# Kubernetes
k8s/

# Terraform
.terraform/
*.tfstate
*.tfstate.backup

# SASS
.sass-cache/

# Redis
dump.rdb

# Elasticsearch
data/elasticsearch/

# MongoDB
data/mongodb/

# Celery
celerybeat-schedule.*

# Django migrations (optional - uncomment if you want to track migrations)
# !*/migrations/
# !*/migrations/*.py
# */migrations/*.pyc
# */migrations/__pycache__/

# Jupyter
.jupyter/

# MkDocs
site/

# Pylint
.pylint.d/

# Bandit security tool
.bandit

# Black code formatter
.cache/black/

# Mypy type checker
.mypy_cache/

# Pyre type checker
.pyre/

# Security
security.txt

# Local development
.local/
.devcontainer/

# Temporary files
*.tmp
*.temp

# MacOS
.AppleDouble
.LSOverride

# Linux
*~

# Editor directories and files
.idea
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Project specific
# Add any project-specific ignores below this line

# Django production static files collected by collectstatic
/staticfiles/

# Django media files
/media/

# Development SQLite database (if used)
/db.sqlite3

# Docker volumes
/volumes/
/data/

# Certificates and keys (should never be committed)
*.key
*.pem
*.crt
*.cer

# Backup files from editors
*~
*.swp
*.swo

# Temporary files
.tmp/
.temp/
